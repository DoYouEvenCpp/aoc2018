#include <string>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <iterator>
#include <vector>
#include <fstream>
#include <cctype>
#include <numeric>
#include <set>
#include <array>
#include <map>
#include <memory>
#include <algorithm>

struct p
{
	long int x;
	long int y;
};

struct v
{
	long int x;
	long int y;
};

//std::vector<p> pos{ { 9,  1}, { 7,  0}, { 3, -2}, { 6, 10}, { 2, -4}, {-6, 10}, { 1,  8}, { 1,  7}, {-3, 11}, { 7,  6}, {-2,  3}, {-4,  3}, {10, -3}, { 5, 11}, { 4,  7}, { 8, -2}, {15,  0}, { 1,  6}, { 8,  9}, { 3,  3}, { 0,  5}, {-2,  2}, { 5, -2}, { 1,  4}, {-2,  7}, { 3,  6}, { 5,  0}, {-6,  0}, { 5,  9}, {14,  7}, {-3,  6} };
//std::vector<v> velocity{ { 0,  2}, {-1,  0}, {-1,  1}, {-2, -1}, { 2,  2}, { 2, -2}, { 1, -1}, { 1,  0}, { 1, -2}, {-1, -1}, { 1,  0}, { 2,  0}, {-1,  1}, { 1, -2}, { 0, -1}, { 0,  1}, {-2,  0}, { 1,  0}, { 0, -1}, {-1,  1}, { 0, -1}, { 2,  0}, { 1,  2}, { 2,  1}, { 2, -2}, {-1, -1}, { 1,  0}, { 2,  0}, { 1, -2}, {-2,  0}, { 2, -1} };
std::vector<p> pos{ { 53777,  21594},{ 53761,  53776},{-32066,  53779},{-21287,  43043},{ 10848, -42773},{-10596,  53770},{-42798,  53772},{-21308, -32037},{-21332,  10863},{-10596, -21313},{-42750, -53498},{-10569, -21315},{-21334,  53779},{ 43055, -10586},{ 21588, -21313},{ 53795,  32316},{ 43061, -21319},{-10590, -21317},{-21344, -32042},{-53491, -42769},{ 53801,  21595},{ 43055, -42771},{-32027, -21319},{ 43068,  21598},{ 32307, -53499},{ 53787, -53491},{-21288,  53778},{-42787,  10862},{-53522,  32325},{-53513,  21595},{-42741, -32042},{ 43022, -53495},{ 43076,  21593},{ 53757, -10589},{-32035,  43047},{ 32328, -42768},{ 21608, -53500},{ 53790, -21318},{-10561, -32038},{-32068, -42768},{ 10861, -10587},{ 43068,  53779},{ 21568, -10592},{-42766, -10584},{-53469, -10585},{ 21564,  32322},{-42762, -32037},{ 21576, -10587},{-10567,  53774},{-21283,  21589},{-32022, -32042},{-21309,  10871},{ 53778,  53774},{-53493, -21317},{ 43023, -42766},{ 43030, -42768},{ 10853,  21597},{ 21584,  53778},{-53492,  53770},{-21309, -10592},{-10573, -53497},{-53513, -10592},{-42750, -42768},{ 21589,  32321},{ 43042,  21594},{ 32308, -10590},{-32055, -21315},{-21318, -42767},{-53501,  10864},{-53474, -53496},{-53513, -21318},{-10617, -21318},{ 10869, -42770},{ 43034, -21318},{ 53785,  21597},{-32070, -53491},{-42771, -32039},{-42786, -32045},{-10597,  53777},{-32023, -32042},{ 53787, -10592},{-21318,  53776},{-10585, -53499},{ 32315,  32323},{ 53794, -53496},{ 10864, -42766},{-32055, -42770},{-53467,  53770},{ 32295,  53770},{ 32291, -32038},{-32053,  21593},{ 10888,  43047},{ 53777,  53776},{ 43070,  43052},{-53509,  53775},{ 43047, -21310},{ 10896,  53774},{ 10861,  32320},{ 21601,  43050},{ 53749, -21314},{-10566,  43043},{ 53747, -32037},{ 21593, -42773},{-42782,  21598},{-21299, -10592},{-42766, -10592},{ 43022, -21311},{ 53801, -21314},{-42742,  53779},{ 43042,  10862},{-32066,  32322},{ 53746,  10871},{ 43038,  43050},{ 32349, -10588},{ 10858,  53778},{ 32304, -42773},{ 43042, -53499},{ 43035,  10864},{-32021,  21593},{-53501, -53494},{ 43074,  32325},{ 21620, -53499},{-21320,  32322},{ 43050,  53779},{-10601, -32045},{ 21608, -21310},{-42794, -10592},{ 53750,  10863},{-21341, -53500},{ 32348,  10871},{ 32307, -21316},{-32019, -32042},{ 53774, -32046},{-21286, -42764},{-10615,  21598},{ 21604,  32316},{ 32312, -53491},{-21339, -42764},{-42766,  43047},{ 10888, -32037},{ 53754,  21598},{ 21576,  32320},{ 21580, -21317},{ 53750, -32041},{-21323, -53495},{ 43066,  21592},{ 10840, -32046},{ 32343,  53774},{-10564,  53779},{ 21590, -32043},{ 21612,  43046},{ 21576, -21312},{ 53777, -32044},{-53493,  10863},{ 32332,  10871},{ 10880,  53774},{-53482,  32320},{ 10889,  10862},{-10558, -32037},{-21304,  10870},{-32034,  21590},{-32039, -42770},{ 53770,  53775},{ 32332,  21595},{ 32349,  53770},{ 10886, -53496},{-32070,  21589},{ 21606,  10871},{-42750, -53492},{ 53772,  10869},{-42753,  43045},{-21316, -53499},{-32066, -53492},{-53509,  32319},{-42774, -42764},{ 32318, -42771},{-21302,  53775},{ 32349, -42764},{ 10893, -32039},{ 43022,  21597},{ 43062, -10583},{-32066,  10870},{ 10848, -42764},{ 32325,  10866},{-53514,  53779},{-21317,  21591},{-53476, -32037},{-10617,  43046},{-42795,  53779},{ 53758, -10592},{-10615, -53500},{ 21620,  10867},{ 10874, -42771},{ 32315,  53778},{-53490, -32042},{ 21596,  10869},{-32027, -10589},{ 53782,  53778},{-53469,  10862},{-32068,  43052},{ 32339, -53500},{ 21624, -42764},{ 43039,  53771},{ 32307, -32046},{-53469,  10864},{ 32323, -53491},{ 32324, -10592},{ 21584,  21596},{-42741,  32320},{-32066,  32317},{ 10849,  32323},{ 53778, -21310},{-10569,  10868},{ 21607, -42764},{ 32325, -53500},{-42742, -42770},{ 21614,  21598},{ 21596,  53771},{ 10849, -10592},{-32039,  53775},{ 43047, -21319},{-10583,  53779},{-21332,  43046},{ 21566,  43052},{ 53785, -21310},{ 32303, -21319},{ 43070, -21310},{ 43062,  21589},{-53469, -42773},{ 43070,  43052},{-42794,  43048},{-10582,  32316},{ 21585,  32320},{ 21585, -10591},{ 32312,  32322},{ 43036, -53497},{-42770,  43044},{-10569, -42772},{ 21621, -53500},{ 53777,  32322},{-10591,  43049},{ 43037, -42768},{-53505, -53492},{ 32296, -53495},{ 21585, -53493},{ 21600, -42769},{ 53797, -53496},{ 10885,  10865},{-42766, -21314},{ 32304,  53770},{ 21564, -53497},{ 21621,  32325},{ 10838,  53770},{ 21598,  43052},{ 53785, -32037},{ 53806,  10871},{-21285, -21315},{-42761,  10870},{-42748, -42773},{ 21600, -32046},{-32063,  21596},{-42782, -21317},{ 32323,  53779},{-21328,  10866},{ 43076, -53491},{-53477, -32040},{-32055, -21312},{ 53805,  32316},{-32038,  21593},{-42761, -42770},{-21303,  53770},{ 53766, -42771},{-32066, -21318},{-21320, -53497},{ 43039, -53497},{-10616, -42764},{-53477, -10585},{-32012,  32316},{-32047, -53500},{-32023,  32321},{-32059, -21311},{ 21620,  53773},{-10589,  53778},{ 10837,  32323},{-53505, -53492},{-53525,  10864},{-32047,  32323},{ 21575, -53491},{-42738,  53774},{-32015, -21315},{ 32307, -42771},{ 43042,  10862},{-10580, -42767},{ 10877,  43050},{-32052, -10586},{ 10856,  21594},{-10572,  10864},{ 10849,  21591},{-32045, -21316},{-53477,  43052},{ 43055, -53494},{ 10869, -53496},{ 10865,  43051},{ 10886, -10583},{ 21585, -10588},{-42758, -42766},{ 21607, -53491},{-32012,  53779},{ 53782, -42768},{ 10837,  43044},{-32066, -32038},{-53483,  10871},{-21299,  53779},{ 53794,  53770},{ 32316, -21315},{ 32303,  10867},{ 43068,  53774},{ 32315, -53493},{ 53782, -53497},{ 32307,  32323},{-10617, -10590},{-21335,  10871},{-21336, -21311},{ 43052,  43043},{ 32327, -32042},{ 43062, -53497},{ 32294, -10592},{ 10853,  53779},{ 32339,  10866},{-53477, -21319},{-42765,  53774},{-53485,  32324},{-53469,  21589},{-32071, -32043},{ 10881, -42764},{-21344,  10866},{-10564,  32316},{ 32307,  10866},{ 43039, -21318},{ 32303, -32038},{-21320,  21594},{-10574, -42764},{-21332,  43045},{-21344, -10587},{ 43030, -42767},{-53484, -21319},{ 43058,  53777},{-21341,  32321},{-10583, -21319},{-32054, -10591},{-53491, -53496},{-42742,  43050},{-32026, -10583},{ 10853,  21594},{-53483,  32321},{-21284, -21310},{ 32323,  43051},{ 32352,  53779},{ 21612,  21594},{ 32316,  43048} };
std::vector<v> velocity{ {-5, -2}, {-5, -5}, { 3, -5}, { 2, -4}, {-1,  4}, { 1, -5}, { 4, -5}, { 2,  3}, { 2, -1}, { 1,  2}, { 4,  5}, { 1,  2}, { 2, -5}, {-4,  1}, {-2,  2}, {-5, -3}, {-4,  2}, { 1,  2}, { 2,  3}, { 5,  4}, {-5, -2}, {-4,  4}, { 3,  2}, {-4, -2}, {-3,  5}, {-5,  5}, { 2, -5}, { 4, -1}, { 5, -3}, { 5, -2}, { 4,  3}, {-4,  5}, {-4, -2}, {-5,  1}, { 3, -4}, {-3,  4}, {-2,  5}, {-5,  2}, { 1,  3}, { 3,  4}, {-1,  1}, {-4, -5}, {-2,  1}, { 4,  1}, { 5,  1}, {-2, -3}, { 4,  3}, {-2,  1}, { 1, -5}, { 2, -2}, { 3,  3}, { 2, -1}, {-5, -5}, { 5,  2}, {-4,  4}, {-4,  4}, {-1, -2}, {-2, -5}, { 5, -5}, { 2,  1}, { 1,  5}, { 5,  1}, { 4,  4}, {-2, -3}, {-4, -2}, {-3,  1}, { 3,  2}, { 2,  4}, { 5, -1}, { 5,  5}, { 5,  2}, { 1,  2}, {-1,  4}, {-4,  2}, {-5, -2}, { 3,  5}, { 4,  3}, { 4,  3}, { 1, -5}, { 3,  3}, {-5,  1}, { 2, -5}, { 1,  5}, {-3, -3}, {-5,  5}, {-1,  4}, { 3,  4}, { 5, -5}, {-3, -5}, {-3,  3}, { 3, -2}, {-1, -4}, {-5, -5}, {-4, -4}, { 5, -5}, {-4,  2}, {-1, -5}, {-1, -3}, {-2, -4}, {-5,  2}, { 1, -4}, {-5,  3}, {-2,  4}, { 4, -2}, { 2,  1}, { 4,  1}, {-4,  2}, {-5,  2}, { 4, -5}, {-4, -1}, { 3, -3}, {-5, -1}, {-4, -4}, {-3,  1}, {-1, -5}, {-3,  4}, {-4,  5}, {-4, -1}, { 3, -2}, { 5,  5}, {-4, -3}, {-2,  5}, { 2, -3}, {-4, -5}, { 1,  3}, {-2,  2}, { 4,  1}, {-5, -1}, { 2,  5}, {-3, -1}, {-3,  2}, { 3,  3}, {-5,  3}, { 2,  4}, { 1, -2}, {-2, -3}, {-3,  5}, { 2,  4}, { 4, -4}, {-1,  3}, {-5, -2}, {-2, -3}, {-2,  2}, {-5,  3}, { 2,  5}, {-4, -2}, {-1,  3}, {-3, -5}, { 1, -5}, {-2,  3}, {-2, -4}, {-2,  2}, {-5,  3}, { 5, -1}, {-3, -1}, {-1, -5}, { 5, -3}, {-1, -1}, { 1,  3}, { 2, -1}, { 3, -2}, { 3,  4}, {-5, -5}, {-3, -2}, {-3, -5}, {-1,  5}, { 3, -2}, {-2, -1}, { 4,  5}, {-5, -1}, { 4, -4}, { 2,  5}, { 3,  5}, { 5, -3}, { 4,  4}, {-3,  4}, { 2, -5}, {-3,  4}, {-1,  3}, {-4, -2}, {-4,  1}, { 3, -1}, {-1,  4}, {-3, -1}, { 5, -5}, { 2, -2}, { 5,  3}, { 1, -4}, { 4, -5}, {-5,  1}, { 1,  5}, {-2, -1}, {-1,  4}, {-3, -5}, { 5,  3}, {-2, -1}, { 3,  1}, {-5, -5}, { 5, -1}, { 3, -4}, {-3,  5}, {-2,  4}, {-4, -5}, {-3,  3}, { 5, -1}, {-3,  5}, {-3,  1}, {-2, -2}, { 4, -3}, { 3, -3}, {-1, -3}, {-5,  2}, { 1, -1}, {-2,  4}, {-3,  5}, { 4,  4}, {-2, -2}, {-2, -5}, {-1,  1}, { 3, -5}, {-4,  2}, { 1, -5}, { 2, -4}, {-2, -4}, {-5,  2}, {-3,  2}, {-4,  2}, {-4, -2}, { 5,  4}, {-4, -4}, { 4, -4}, { 1, -3}, {-2, -3}, {-2,  1}, {-3, -3}, {-4,  5}, { 4, -4}, { 1,  4}, {-2,  5}, {-5, -3}, { 1, -4}, {-4,  4}, { 5,  5}, {-3,  5}, {-2,  5}, {-2,  4}, {-5,  5}, {-1, -1}, { 4,  2}, {-3, -5}, {-2,  5}, {-2, -3}, {-1, -5}, {-2, -4}, {-5,  3}, {-5, -1}, { 2,  2}, { 4, -1}, { 4,  4}, {-2,  3}, { 3, -2}, { 4,  2}, {-3, -5}, { 2, -1}, {-4,  5}, { 5,  3}, { 3,  2}, {-5, -3}, { 3, -2}, { 4,  4}, { 2, -5}, {-5,  4}, { 3,  2}, { 2,  5}, {-4,  5}, { 1,  4}, { 5,  1}, { 3, -3}, { 3,  5}, { 3, -3}, { 3,  2}, {-2, -5}, { 1, -5}, {-1, -3}, { 5,  5}, { 5, -1}, { 3, -3}, {-2,  5}, { 4, -5}, { 3,  2}, {-3,  4}, {-4, -1}, { 1,  4}, {-1, -4}, { 3,  1}, {-1, -2}, { 1, -1}, {-1, -2}, { 3,  2}, { 5, -4}, {-4,  5}, {-1,  5}, {-1, -4}, {-1,  1}, {-2,  1}, { 4,  4}, {-2,  5}, { 3, -5}, {-5,  4}, {-1, -4}, { 3,  3}, { 5, -1}, { 2, -5}, {-5, -5}, {-3,  2}, {-3, -1}, {-4, -5}, {-3,  5}, {-5,  5}, {-3, -3}, { 1,  1}, { 2, -1}, { 2,  2}, {-4, -4}, {-3,  3}, {-4,  5}, {-3,  1}, {-1, -5}, {-3, -1}, { 5,  2}, { 4, -5}, { 5, -3}, { 5, -2}, { 3,  3}, {-1,  4}, { 2, -1}, { 1, -3}, {-3, -1}, {-4,  2}, {-3,  3}, { 2, -2}, { 1,  4}, { 2, -4}, { 2,  1}, {-4,  4}, { 5,  2}, {-4, -5}, { 2, -3}, { 1,  2}, { 3,  1}, { 5,  5}, { 4, -4}, { 3,  1}, {-1, -2}, { 5, -3}, { 2,  2}, {-3, -4}, {-3, -5}, {-2, -2}, {-3, -4}};

auto make_step = [&](p& position, v diff)
{
	position.x += diff.x;
	position.y += diff.y;
};


int main()
{
	long long unsigned prev_area = std::numeric_limits<long int>::max();
	int i = 1;
	for (;i <= 10727; ++i)
	{
		int j = 0;
		for (auto& e : pos)
		{
			make_step(e, velocity[j]);
			++j;
		}
		j = 0;
	}
	const auto min_xx = std::min_element(pos.begin(), pos.end(), [&](p& a, p& b) {return a.x < b.x; })->x;
	const auto min_yx = std::min_element(pos.begin(), pos.end(), [&](p& a, p& b) {return a.y < b.y; })->y;
	{
	const auto max_x = std::max_element(pos.begin(), pos.end(), [&](p& a, p& b) {return a.x < b.x; })->x;
	const auto max_y = std::max_element(pos.begin(), pos.end(), [&](p& a, p& b) {return a.y < b.y; })->y;
	const auto min_x = std::min_element(pos.begin(), pos.end(), [&](p& a, p& b) {return a.x < b.x; })->x;
	const auto min_y = std::min_element(pos.begin(), pos.end(), [&](p& a, p& b) {return a.y < b.y; })->y;
	const auto x_diff = min_x < 0 ? max_x + std::abs(min_x) : max_x - min_x;
	const auto y_diff = min_y < 0 ? max_y + std::abs(min_y) : max_y - min_y;
	const long long unsigned area = x_diff * y_diff;
	std::cout << "max: " << max_x << " x " << max_y << " | min: " << min_x << " x " << min_y << " | " << x_diff << " x " << y_diff << " | " << area << std::endl;
	}
	for (auto& p : pos)
	{
		p.x -= min_xx;
		p.y -= min_yx;
	}

	std::array<std::array<char, 10>, 62> str{};
	for (auto i = 0; i <= 9; ++i)
		for (auto j = 0; j <= 61; ++j)
			str[i][j] = ' ';

	for (auto& p : pos)
	{
		str[p.x][p.y] =  'X';
	}
	std::cout << "\n\n\n";

	for (auto i = 0; i <= 9; ++i)
	{
		for (auto j = 0; j <= 61; ++j)
			std::cout << str[j][i];
		std::cout << std::endl;
	}
	std::cout << "\n\n time: " << i - 1 << std::endl;
	return 0;
}